{
  "fiqa": {
    "metrics": {
      "precision": 0.05714285714285715,
      "recall": 0.20238095238095236,
      "mrr": 0.18571428571428572,
      "ndcg": 0.13961737886952783
    },
    "statistics": {
      "total_queries": 50,
      "avg_processing_time_ms": 901.5606927871704,
      "query_type_distribution": {
        "semantic": 38,
        "keyword": 7,
        "entity": 5
      },
      "fusion_method_distribution": {
        "RRF": 45,
        "LinearOptimized": 3,
        "LinearEqual": 2
      },
      "retriever_usage": {
        "EfficientVector": 50,
        "BM25": 50
      },
      "router_stats": {
        "routing_strategy": "hybrid",
        "available_retrievers": [
          "BM25",
          "EfficientVector",
          "SemanticBM25"
        ],
        "available_fusion_methods": [
          "RRF",
          "LinearEqual",
          "LinearOptimized"
        ],
        "total_routing_decisions": 50,
        "performance_records": 0,
        "query_type_distribution": {
          "semantic": 38,
          "keyword": 7,
          "entity": 5
        },
        "fusion_method_distribution": {
          "RRF": 45,
          "LinearOptimized": 3,
          "LinearEqual": 2
        },
        "average_confidence": 0.8330000000000005
      },
      "fusion_stats": {
        "total_fusions": 50,
        "method_usage": {
          "RRF": 45,
          "LinearOptimized": 3,
          "LinearEqual": 2
        },
        "avg_scores": {},
        "method_percentages": {
          "RRF": 90.0,
          "LinearOptimized": 6.0,
          "LinearEqual": 4.0
        }
      }
    },
    "query_details": [
      {
        "query_id": "10385",
        "query_text": "When should I start saving/investing for my retirement?",
        "query_features": {
          "query_id": "10385",
          "query_text": "When should I start saving/investing for my retirement?",
          "query_type": "semantic",
          "length": 55,
          "word_count": 8,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "10385",
          "query_text": "When should I start saving/investing for my retirement?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:09:20.224831"
        },
        "processing_time": 1796.4613437652588,
        "num_results": 10
      },
      {
        "query_id": "1927",
        "query_text": "How does a Non US citizen gain SEC Accredited Investor Status?",
        "query_features": {
          "query_id": "1927",
          "query_text": "How does a Non US citizen gain SEC Accredited Investor Status?",
          "query_type": "semantic",
          "length": 62,
          "word_count": 11,
          "is_question": true,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "1927",
          "query_text": "How does a Non US citizen gain SEC Accredited Investor Status?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.9,
            "BM25": 0.09999999999999998
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:22.020809"
        },
        "processing_time": 811.1484050750732,
        "num_results": 10
      },
      {
        "query_id": "615",
        "query_text": "Canadian accepting money electronically from Americans",
        "query_features": {
          "query_id": "615",
          "query_text": "Canadian accepting money electronically from Americans",
          "query_type": "keyword",
          "length": 54,
          "word_count": 6,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "615",
          "query_text": "Canadian accepting money electronically from Americans",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "LinearOptimized",
          "fusion_weights": {
            "BM25": 0.7,
            "EfficientVector": 0.3
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:09:22.832004"
        },
        "processing_time": 770.2393531799316,
        "num_results": 10
      },
      {
        "query_id": "4571",
        "query_text": "HSBC Hong Kong's \u201cDeposit Plus\u201d Product: What is it, and what strategies to employ?",
        "query_features": {
          "query_id": "4571",
          "query_text": "HSBC Hong Kong's \u201cDeposit Plus\u201d Product: What is it, and what strategies to employ?",
          "query_type": "semantic",
          "length": 83,
          "word_count": 14,
          "is_question": true,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "4571",
          "query_text": "HSBC Hong Kong's \u201cDeposit Plus\u201d Product: What is it, and what strategies to employ?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:23.602254"
        },
        "processing_time": 947.2131729125977,
        "num_results": 10
      },
      {
        "query_id": "4190",
        "query_text": "What is best investment which is full recession proof?",
        "query_features": {
          "query_id": "4190",
          "query_text": "What is best investment which is full recession proof?",
          "query_type": "semantic",
          "length": 54,
          "word_count": 9,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "4190",
          "query_text": "What is best investment which is full recession proof?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.7,
            "BM25": 0.30000000000000004
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:24.549512"
        },
        "processing_time": 860.4400157928467,
        "num_results": 10
      },
      {
        "query_id": "3783",
        "query_text": "Are there any statistics that support the need for Title Insurance?",
        "query_features": {
          "query_id": "3783",
          "query_text": "Are there any statistics that support the need for Title Insurance?",
          "query_type": "semantic",
          "length": 67,
          "word_count": 11,
          "is_question": true,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "3783",
          "query_text": "Are there any statistics that support the need for Title Insurance?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:25.409971"
        },
        "processing_time": 926.6753196716309,
        "num_results": 10
      },
      {
        "query_id": "3501",
        "query_text": "Paid cash for a car, but dealer wants to change price",
        "query_features": {
          "query_id": "3501",
          "query_text": "Paid cash for a car, but dealer wants to change price",
          "query_type": "keyword",
          "length": 53,
          "word_count": 11,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "3501",
          "query_text": "Paid cash for a car, but dealer wants to change price",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:26.336677"
        },
        "processing_time": 927.577018737793,
        "num_results": 10
      },
      {
        "query_id": "2335",
        "query_text": "Giving kids annual tax free gift of $28,000",
        "query_features": {
          "query_id": "2335",
          "query_text": "Giving kids annual tax free gift of $28,000",
          "query_type": "entity",
          "length": 43,
          "word_count": 8,
          "is_question": false,
          "has_numbers": true,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "2335",
          "query_text": "Giving kids annual tax free gift of $28,000",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408",
          "timestamp": "2025-07-19T22:09:27.264260"
        },
        "processing_time": 823.8284587860107,
        "num_results": 10
      },
      {
        "query_id": "1783",
        "query_text": "Freelancing Tax implication",
        "query_features": {
          "query_id": "1783",
          "query_text": "Freelancing Tax implication",
          "query_type": "entity",
          "length": 27,
          "word_count": 3,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "simple",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "1783",
          "query_text": "Freelancing Tax implication",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "LinearEqual",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u7b80\u5355\u67e5\u8be2\u4f7f\u7528\u7ebf\u6027\u878d\u5408",
          "timestamp": "2025-07-19T22:09:28.088095"
        },
        "processing_time": 779.0584564208984,
        "num_results": 10
      },
      {
        "query_id": "1769",
        "query_text": "Is it financially advantageous and safe to rent out my personal car?",
        "query_features": {
          "query_id": "1769",
          "query_text": "Is it financially advantageous and safe to rent out my personal car?",
          "query_type": "semantic",
          "length": 68,
          "word_count": 12,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "1769",
          "query_text": "Is it financially advantageous and safe to rent out my personal car?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.7,
            "BM25": 0.30000000000000004
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:28.867187"
        },
        "processing_time": 950.4976272583008,
        "num_results": 10
      },
      {
        "query_id": "5986",
        "query_text": "Is forward P/E calculated using current price(if yes, how useful is it)?",
        "query_features": {
          "query_id": "5986",
          "query_text": "Is forward P/E calculated using current price(if yes, how useful is it)?",
          "query_type": "semantic",
          "length": 72,
          "word_count": 12,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "5986",
          "query_text": "Is forward P/E calculated using current price(if yes, how useful is it)?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.7,
            "BM25": 0.30000000000000004
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:29.817776"
        },
        "processing_time": 928.9491176605225,
        "num_results": 10
      },
      {
        "query_id": "8539",
        "query_text": "Can the risk of investing in an asset be different for different investors?",
        "query_features": {
          "query_id": "8539",
          "query_text": "Can the risk of investing in an asset be different for different investors?",
          "query_type": "semantic",
          "length": 75,
          "word_count": 13,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "8539",
          "query_text": "Can the risk of investing in an asset be different for different investors?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:30.746819"
        },
        "processing_time": 948.3077526092529,
        "num_results": 10
      },
      {
        "query_id": "8090",
        "query_text": "Do corporate stock splits negate share repurchase programs?",
        "query_features": {
          "query_id": "8090",
          "query_text": "Do corporate stock splits negate share repurchase programs?",
          "query_type": "semantic",
          "length": 59,
          "word_count": 8,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "8090",
          "query_text": "Do corporate stock splits negate share repurchase programs?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.7,
            "BM25": 0.30000000000000004
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22",
          "timestamp": "2025-07-19T22:09:31.695124"
        },
        "processing_time": 802.513837814331,
        "num_results": 10
      },
      {
        "query_id": "1519",
        "query_text": "Double-Taxation of Royalties paid for in Korea to a US Company",
        "query_features": {
          "query_id": "1519",
          "query_text": "Double-Taxation of Royalties paid for in Korea to a US Company",
          "query_type": "entity",
          "length": 62,
          "word_count": 11,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "1519",
          "query_text": "Double-Taxation of Royalties paid for in Korea to a US Company",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:32.497629"
        },
        "processing_time": 919.5666313171387,
        "num_results": 10
      },
      {
        "query_id": "9186",
        "query_text": "Can I buy only 4 shares of a company?",
        "query_features": {
          "query_id": "9186",
          "query_text": "Can I buy only 4 shares of a company?",
          "query_type": "semantic",
          "length": 37,
          "word_count": 9,
          "is_question": true,
          "has_numbers": true,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "9186",
          "query_text": "Can I buy only 4 shares of a company?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:33.417214"
        },
        "processing_time": 821.0780620574951,
        "num_results": 10
      },
      {
        "query_id": "6387",
        "query_text": "What factors make someone buy or sell a stock?",
        "query_features": {
          "query_id": "6387",
          "query_text": "What factors make someone buy or sell a stock?",
          "query_type": "semantic",
          "length": 46,
          "word_count": 9,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "6387",
          "query_text": "What factors make someone buy or sell a stock?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.7,
            "BM25": 0.30000000000000004
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:34.238339"
        },
        "processing_time": 816.1954879760742,
        "num_results": 10
      },
      {
        "query_id": "696",
        "query_text": "Executor of will",
        "query_features": {
          "query_id": "696",
          "query_text": "Executor of will",
          "query_type": "keyword",
          "length": 16,
          "word_count": 3,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "simple",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "696",
          "query_text": "Executor of will",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "LinearEqual",
          "fusion_weights": {
            "BM25": 0.7,
            "EfficientVector": 0.3
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668 + \u7b80\u5355\u67e5\u8be2\u4f7f\u7528\u7ebf\u6027\u878d\u5408",
          "timestamp": "2025-07-19T22:09:35.054556"
        },
        "processing_time": 752.9122829437256,
        "num_results": 10
      },
      {
        "query_id": "671",
        "query_text": "Does the low CAD positively or negatively impact Canadian Investors?",
        "query_features": {
          "query_id": "671",
          "query_text": "Does the low CAD positively or negatively impact Canadian Investors?",
          "query_type": "semantic",
          "length": 68,
          "word_count": 10,
          "is_question": true,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "671",
          "query_text": "Does the low CAD positively or negatively impact Canadian Investors?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:35.807476"
        },
        "processing_time": 842.1585559844971,
        "num_results": 10
      },
      {
        "query_id": "1622",
        "query_text": "How to properly collect money from corporate sponsors?",
        "query_features": {
          "query_id": "1622",
          "query_text": "How to properly collect money from corporate sponsors?",
          "query_type": "semantic",
          "length": 54,
          "word_count": 8,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "1622",
          "query_text": "How to properly collect money from corporate sponsors?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:09:36.649724"
        },
        "processing_time": 833.4081172943115,
        "num_results": 10
      },
      {
        "query_id": "3436",
        "query_text": "Health insurance lapsed due to employer fraud. How to get medications while in transition?",
        "query_features": {
          "query_id": "3436",
          "query_text": "Health insurance lapsed due to employer fraud. How to get medications while in transition?",
          "query_type": "semantic",
          "length": 90,
          "word_count": 14,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "medical"
        },
        "routing_decision": {
          "query_id": "3436",
          "query_text": "Health insurance lapsed due to employer fraud. How to get medications while in transition?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.5,
            "BM25": 0.5
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u533b\u7597\u9886\u57df\u5e73\u8861\u7b56\u7565 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:37.483200"
        },
        "processing_time": 928.6832809448242,
        "num_results": 10
      },
      {
        "query_id": "3616",
        "query_text": "For the first time in my life, I'm going to be making real money\u2026what should I do with it?",
        "query_features": {
          "query_id": "3616",
          "query_text": "For the first time in my life, I'm going to be making real money\u2026what should I do with it?",
          "query_type": "semantic",
          "length": 90,
          "word_count": 19,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "3616",
          "query_text": "For the first time in my life, I'm going to be making real money\u2026what should I do with it?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:38.411930"
        },
        "processing_time": 1076.9212245941162,
        "num_results": 10
      },
      {
        "query_id": "7502",
        "query_text": "How do ETF fees get applied?",
        "query_features": {
          "query_id": "7502",
          "query_text": "How do ETF fees get applied?",
          "query_type": "semantic",
          "length": 28,
          "word_count": 6,
          "is_question": true,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "7502",
          "query_text": "How do ETF fees get applied?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:09:39.488855"
        },
        "processing_time": 788.3532047271729,
        "num_results": 10
      },
      {
        "query_id": "9464",
        "query_text": "Simple and safe way to manage a lot of cash",
        "query_features": {
          "query_id": "9464",
          "query_text": "Simple and safe way to manage a lot of cash",
          "query_type": "keyword",
          "length": 43,
          "word_count": 10,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "9464",
          "query_text": "Simple and safe way to manage a lot of cash",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.7,
            "EfficientVector": 0.3
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:40.277252"
        },
        "processing_time": 932.2254657745361,
        "num_results": 10
      },
      {
        "query_id": "632",
        "query_text": "What is the field \u201cFolio\u201d in an accounting book for?",
        "query_features": {
          "query_id": "632",
          "query_text": "What is the field \u201cFolio\u201d in an accounting book for?",
          "query_type": "semantic",
          "length": 52,
          "word_count": 10,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "632",
          "query_text": "What is the field \u201cFolio\u201d in an accounting book for?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:41.209490"
        },
        "processing_time": 921.9551086425781,
        "num_results": 10
      },
      {
        "query_id": "8480",
        "query_text": "Why can I see/trade VIX but not S&P/TSX 60 VIX?",
        "query_features": {
          "query_id": "8480",
          "query_text": "Why can I see/trade VIX but not S&P/TSX 60 VIX?",
          "query_type": "semantic",
          "length": 47,
          "word_count": 10,
          "is_question": true,
          "has_numbers": true,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "8480",
          "query_text": "Why can I see/trade VIX but not S&P/TSX 60 VIX?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:42.131474"
        },
        "processing_time": 876.4369487762451,
        "num_results": 10
      },
      {
        "query_id": "3183",
        "query_text": "Is it better to buy this used car from Craigslist or from a dealership?",
        "query_features": {
          "query_id": "3183",
          "query_text": "Is it better to buy this used car from Craigslist or from a dealership?",
          "query_type": "semantic",
          "length": 71,
          "word_count": 14,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "3183",
          "query_text": "Is it better to buy this used car from Craigslist or from a dealership?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.9,
            "BM25": 0.09999999999999998
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:43.007943"
        },
        "processing_time": 952.6493549346924,
        "num_results": 10
      },
      {
        "query_id": "1031",
        "query_text": "How to get information about historical stock option prices for a defunct company?",
        "query_features": {
          "query_id": "1031",
          "query_text": "How to get information about historical stock option prices for a defunct company?",
          "query_type": "semantic",
          "length": 82,
          "word_count": 13,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "1031",
          "query_text": "How to get information about historical stock option prices for a defunct company?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.7,
            "BM25": 0.30000000000000004
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:43.960699"
        },
        "processing_time": 897.8683948516846,
        "num_results": 10
      },
      {
        "query_id": "10595",
        "query_text": "Why buying an inverse ETF does not give same results as shorting the ETF",
        "query_features": {
          "query_id": "10595",
          "query_text": "Why buying an inverse ETF does not give same results as shorting the ETF",
          "query_type": "semantic",
          "length": 72,
          "word_count": 14,
          "is_question": true,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "10595",
          "query_text": "Why buying an inverse ETF does not give same results as shorting the ETF",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:44.858646"
        },
        "processing_time": 1105.607032775879,
        "num_results": 10
      },
      {
        "query_id": "7381",
        "query_text": "Index funds with dividends?",
        "query_features": {
          "query_id": "7381",
          "query_text": "Index funds with dividends?",
          "query_type": "semantic",
          "length": 27,
          "word_count": 4,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "7381",
          "query_text": "Index funds with dividends?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.7,
            "BM25": 0.30000000000000004
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22",
          "timestamp": "2025-07-19T22:09:45.964253"
        },
        "processing_time": 918.6983108520508,
        "num_results": 10
      },
      {
        "query_id": "8084",
        "query_text": "Where does the stock go in a collapse?",
        "query_features": {
          "query_id": "8084",
          "query_text": "Where does the stock go in a collapse?",
          "query_type": "semantic",
          "length": 38,
          "word_count": 8,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "8084",
          "query_text": "Where does the stock go in a collapse?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.7,
            "BM25": 0.30000000000000004
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22",
          "timestamp": "2025-07-19T22:09:46.882999"
        },
        "processing_time": 941.2813186645508,
        "num_results": 10
      },
      {
        "query_id": "6340",
        "query_text": "Is there an advantage to keeping a liquid emergency fund if one also has an untapped line of credit?",
        "query_features": {
          "query_id": "6340",
          "query_text": "Is there an advantage to keeping a liquid emergency fund if one also has an untapped line of credit?",
          "query_type": "semantic",
          "length": 100,
          "word_count": 19,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "6340",
          "query_text": "Is there an advantage to keeping a liquid emergency fund if one also has an untapped line of credit?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.7,
            "BM25": 0.30000000000000004
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:47.824290"
        },
        "processing_time": 1013.9894485473633,
        "num_results": 10
      },
      {
        "query_id": "3460",
        "query_text": "How to manage household finances (income & expenses) [duplicate]",
        "query_features": {
          "query_id": "3460",
          "query_text": "How to manage household finances (income & expenses) [duplicate]",
          "query_type": "semantic",
          "length": 64,
          "word_count": 9,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "3460",
          "query_text": "How to manage household finances (income & expenses) [duplicate]",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.7,
            "BM25": 0.30000000000000004
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:48.838307"
        },
        "processing_time": 827.5096416473389,
        "num_results": 10
      },
      {
        "query_id": "6774",
        "query_text": "Deal with stock PSEC",
        "query_features": {
          "query_id": "6774",
          "query_text": "Deal with stock PSEC",
          "query_type": "entity",
          "length": 20,
          "word_count": 4,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "6774",
          "query_text": "Deal with stock PSEC",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.7,
            "EfficientVector": 0.30000000000000004
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22",
          "timestamp": "2025-07-19T22:09:49.665843"
        },
        "processing_time": 748.4052181243896,
        "num_results": 10
      },
      {
        "query_id": "9161",
        "query_text": "Common practice for start/end date of balance sheet",
        "query_features": {
          "query_id": "9161",
          "query_text": "Common practice for start/end date of balance sheet",
          "query_type": "keyword",
          "length": 51,
          "word_count": 8,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "9161",
          "query_text": "Common practice for start/end date of balance sheet",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "LinearOptimized",
          "fusion_weights": {
            "BM25": 0.7,
            "EfficientVector": 0.3
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:09:50.414253"
        },
        "processing_time": 837.4509811401367,
        "num_results": 10
      },
      {
        "query_id": "4236",
        "query_text": "What is the difference between speculating and investing?",
        "query_features": {
          "query_id": "4236",
          "query_text": "What is the difference between speculating and investing?",
          "query_type": "semantic",
          "length": 57,
          "word_count": 8,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "4236",
          "query_text": "What is the difference between speculating and investing?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:09:51.251725"
        },
        "processing_time": 874.4914531707764,
        "num_results": 10
      },
      {
        "query_id": "2801",
        "query_text": "If I deposit money as cash does it count as direct deposit?",
        "query_features": {
          "query_id": "2801",
          "query_text": "If I deposit money as cash does it count as direct deposit?",
          "query_type": "semantic",
          "length": 59,
          "word_count": 12,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "2801",
          "query_text": "If I deposit money as cash does it count as direct deposit?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:52.126269"
        },
        "processing_time": 892.7867412567139,
        "num_results": 10
      },
      {
        "query_id": "80",
        "query_text": "Get a loan with low interest rate on small business",
        "query_features": {
          "query_id": "80",
          "query_text": "Get a loan with low interest rate on small business",
          "query_type": "keyword",
          "length": 51,
          "word_count": 10,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "80",
          "query_text": "Get a loan with low interest rate on small business",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.7999999999999999,
            "EfficientVector": 0.20000000000000007
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:53.019081"
        },
        "processing_time": 834.6810340881348,
        "num_results": 10
      },
      {
        "query_id": "4153",
        "query_text": "How do I invest in emerging markets",
        "query_features": {
          "query_id": "4153",
          "query_text": "How do I invest in emerging markets",
          "query_type": "semantic",
          "length": 35,
          "word_count": 7,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "4153",
          "query_text": "How do I invest in emerging markets",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.7,
            "BM25": 0.30000000000000004
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22",
          "timestamp": "2025-07-19T22:09:53.853769"
        },
        "processing_time": 783.5912704467773,
        "num_results": 10
      },
      {
        "query_id": "1309",
        "query_text": "Why does FlagStar Bank harass you about payments within grace period?",
        "query_features": {
          "query_id": "1309",
          "query_text": "Why does FlagStar Bank harass you about payments within grace period?",
          "query_type": "semantic",
          "length": 69,
          "word_count": 11,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "1309",
          "query_text": "Why does FlagStar Bank harass you about payments within grace period?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.7,
            "BM25": 0.30000000000000004
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:54.637416"
        },
        "processing_time": 830.8923244476318,
        "num_results": 10
      },
      {
        "query_id": "2622",
        "query_text": "Is the gross amount of US debt dangerous for the small investor?",
        "query_features": {
          "query_id": "2622",
          "query_text": "Is the gross amount of US debt dangerous for the small investor?",
          "query_type": "semantic",
          "length": 64,
          "word_count": 12,
          "is_question": true,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "2622",
          "query_text": "Is the gross amount of US debt dangerous for the small investor?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:55.468382"
        },
        "processing_time": 928.5509586334229,
        "num_results": 10
      },
      {
        "query_id": "5050",
        "query_text": "Rollover 401k into Roth IRA?",
        "query_features": {
          "query_id": "5050",
          "query_text": "Rollover 401k into Roth IRA?",
          "query_type": "entity",
          "length": 28,
          "word_count": 5,
          "is_question": true,
          "has_numbers": true,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "5050",
          "query_text": "Rollover 401k into Roth IRA?",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408",
          "timestamp": "2025-07-19T22:09:56.396968"
        },
        "processing_time": 728.4462451934814,
        "num_results": 10
      },
      {
        "query_id": "6399",
        "query_text": "How is Butterfly Trade Strategy good if the mid Strike price is already past?",
        "query_features": {
          "query_id": "6399",
          "query_text": "How is Butterfly Trade Strategy good if the mid Strike price is already past?",
          "query_type": "semantic",
          "length": 77,
          "word_count": 14,
          "is_question": true,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "6399",
          "query_text": "How is Butterfly Trade Strategy good if the mid Strike price is already past?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.7,
            "BM25": 0.30000000000000004
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:57.125425"
        },
        "processing_time": 991.5680885314941,
        "num_results": 10
      },
      {
        "query_id": "5091",
        "query_text": "Is there a term that better describes a compound annual growth rate (CAGR) when it is negative?",
        "query_features": {
          "query_id": "5091",
          "query_text": "Is there a term that better describes a compound annual growth rate (CAGR) when it is negative?",
          "query_type": "semantic",
          "length": 95,
          "word_count": 17,
          "is_question": true,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "5091",
          "query_text": "Is there a term that better describes a compound annual growth rate (CAGR) when it is negative?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:58.117044"
        },
        "processing_time": 960.620641708374,
        "num_results": 10
      },
      {
        "query_id": "4234",
        "query_text": "Is there a good rule of thumb for how much I should have set aside as emergency cash?",
        "query_features": {
          "query_id": "4234",
          "query_text": "Is there a good rule of thumb for how much I should have set aside as emergency cash?",
          "query_type": "semantic",
          "length": 85,
          "word_count": 18,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "4234",
          "query_text": "Is there a good rule of thumb for how much I should have set aside as emergency cash?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:09:59.077696"
        },
        "processing_time": 1024.3589878082275,
        "num_results": 10
      },
      {
        "query_id": "2554",
        "query_text": "Is there a way to monitor when executives or leaders in a company sell off large holdings?",
        "query_features": {
          "query_id": "2554",
          "query_text": "Is there a way to monitor when executives or leaders in a company sell off large holdings?",
          "query_type": "semantic",
          "length": 90,
          "word_count": 17,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "2554",
          "query_text": "Is there a way to monitor when executives or leaders in a company sell off large holdings?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:10:00.102086"
        },
        "processing_time": 998.9590644836426,
        "num_results": 10
      },
      {
        "query_id": "3393",
        "query_text": "How can contractors recoup taxation-related expenses?",
        "query_features": {
          "query_id": "3393",
          "query_text": "How can contractors recoup taxation-related expenses?",
          "query_type": "semantic",
          "length": 53,
          "word_count": 6,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "3393",
          "query_text": "How can contractors recoup taxation-related expenses?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:10:01.101078"
        },
        "processing_time": 792.0567989349365,
        "num_results": 10
      },
      {
        "query_id": "2010",
        "query_text": "Paypal website donations without being a charity",
        "query_features": {
          "query_id": "2010",
          "query_text": "Paypal website donations without being a charity",
          "query_type": "keyword",
          "length": 48,
          "word_count": 7,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "2010",
          "query_text": "Paypal website donations without being a charity",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "LinearOptimized",
          "fusion_weights": {
            "BM25": 0.7,
            "EfficientVector": 0.3
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:10:01.893224"
        },
        "processing_time": 776.93772315979,
        "num_results": 10
      },
      {
        "query_id": "5044",
        "query_text": "How to find trailing 5-year stock returns for 1980s?",
        "query_features": {
          "query_id": "5044",
          "query_text": "How to find trailing 5-year stock returns for 1980s?",
          "query_type": "semantic",
          "length": 52,
          "word_count": 9,
          "is_question": true,
          "has_numbers": true,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "5044",
          "query_text": "How to find trailing 5-year stock returns for 1980s?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.9,
            "BM25": 0.09999999999999998
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:10:02.670128"
        },
        "processing_time": 863.8463020324707,
        "num_results": 10
      },
      {
        "query_id": "1762",
        "query_text": "Is there a bank account that allows ACH deposits but not ACH withdrawals?",
        "query_features": {
          "query_id": "1762",
          "query_text": "Is there a bank account that allows ACH deposits but not ACH withdrawals?",
          "query_type": "semantic",
          "length": 73,
          "word_count": 13,
          "is_question": true,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "1762",
          "query_text": "Is there a bank account that allows ACH deposits but not ACH withdrawals?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.7,
            "BM25": 0.30000000000000004
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:10:03.534141"
        },
        "processing_time": 908.2901477813721,
        "num_results": 10
      },
      {
        "query_id": "1610",
        "query_text": "18 year old making $60k a year; how should I invest? Traditional or Roth IRA?",
        "query_features": {
          "query_id": "1610",
          "query_text": "18 year old making $60k a year; how should I invest? Traditional or Roth IRA?",
          "query_type": "semantic",
          "length": 77,
          "word_count": 15,
          "is_question": true,
          "has_numbers": true,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "1610",
          "query_text": "18 year old making $60k a year; how should I invest? Traditional or Roth IRA?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:10:04.442391"
        },
        "processing_time": 861.6929054260254,
        "num_results": 10
      }
    ]
  },
  "quora": {
    "metrics": {
      "precision": 0.09642857142857145,
      "recall": 0.7529761904761905,
      "mrr": 0.3511904761904762,
      "ndcg": 0.444716162474564
    },
    "statistics": {
      "total_queries": 50,
      "avg_processing_time_ms": 2750.2055883407593,
      "query_type_distribution": {
        "semantic": 50
      },
      "fusion_method_distribution": {
        "RRF": 50
      },
      "retriever_usage": {
        "EfficientVector": 50,
        "BM25": 50
      },
      "router_stats": {
        "routing_strategy": "hybrid",
        "available_retrievers": [
          "BM25",
          "EfficientVector",
          "SemanticBM25"
        ],
        "available_fusion_methods": [
          "RRF",
          "LinearEqual",
          "LinearOptimized"
        ],
        "total_routing_decisions": 50,
        "performance_records": 0,
        "query_type_distribution": {
          "semantic": 50
        },
        "fusion_method_distribution": {
          "RRF": 50
        },
        "average_confidence": 0.8500000000000008
      },
      "fusion_stats": {
        "total_fusions": 50,
        "method_usage": {
          "RRF": 50
        },
        "avg_scores": {},
        "method_percentages": {
          "RRF": 100.0
        }
      }
    },
    "query_details": [
      {
        "query_id": "279890",
        "query_text": "I always feel sleepy when I'm studying. What should I do?",
        "query_features": {
          "query_id": "279890",
          "query_text": "I always feel sleepy when I'm studying. What should I do?",
          "query_type": "semantic",
          "length": 57,
          "word_count": 11,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "279890",
          "query_text": "I always feel sleepy when I'm studying. What should I do?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:10:14.064323"
        },
        "processing_time": 2569.880723953247,
        "num_results": 10
      },
      {
        "query_id": "179173",
        "query_text": "What is this MNC: 857 or 863 or 874\u2026?",
        "query_features": {
          "query_id": "179173",
          "query_text": "What is this MNC: 857 or 863 or 874\u2026?",
          "query_type": "semantic",
          "length": 37,
          "word_count": 9,
          "is_question": true,
          "has_numbers": true,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "179173",
          "query_text": "What is this MNC: 857 or 863 or 874\u2026?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:10:16.634294"
        },
        "processing_time": 2620.389938354492,
        "num_results": 10
      },
      {
        "query_id": "41068",
        "query_text": "What is quantum computing?",
        "query_features": {
          "query_id": "41068",
          "query_text": "What is quantum computing?",
          "query_type": "semantic",
          "length": 26,
          "word_count": 4,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "41068",
          "query_text": "What is quantum computing?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:10:19.254721"
        },
        "processing_time": 2524.426221847534,
        "num_results": 10
      },
      {
        "query_id": "370103",
        "query_text": "What is a good inexpensive laptop for light gaming (Spore, Civilization IV, Sims)? ",
        "query_features": {
          "query_id": "370103",
          "query_text": "What is a good inexpensive laptop for light gaming (Spore, Civilization IV, Sims)? ",
          "query_type": "semantic",
          "length": 83,
          "word_count": 13,
          "is_question": true,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "370103",
          "query_text": "What is a good inexpensive laptop for light gaming (Spore, Civilization IV, Sims)? ",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:10:21.779177"
        },
        "processing_time": 2905.606985092163,
        "num_results": 10
      },
      {
        "query_id": "472832",
        "query_text": "What is the difference between wires and cables?",
        "query_features": {
          "query_id": "472832",
          "query_text": "What is the difference between wires and cables?",
          "query_type": "semantic",
          "length": 48,
          "word_count": 8,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "472832",
          "query_text": "What is the difference between wires and cables?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:10:24.684820"
        },
        "processing_time": 2754.7080516815186,
        "num_results": 10
      },
      {
        "query_id": "416116",
        "query_text": "What are some of the greatest movie scripts floating around?",
        "query_features": {
          "query_id": "416116",
          "query_text": "What are some of the greatest movie scripts floating around?",
          "query_type": "semantic",
          "length": 60,
          "word_count": 10,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "416116",
          "query_text": "What are some of the greatest movie scripts floating around?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:10:27.439561"
        },
        "processing_time": 2903.0537605285645,
        "num_results": 10
      },
      {
        "query_id": "374512",
        "query_text": "Put on red and live a little hindi meaning?",
        "query_features": {
          "query_id": "374512",
          "query_text": "Put on red and live a little hindi meaning?",
          "query_type": "semantic",
          "length": 43,
          "word_count": 9,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "374512",
          "query_text": "Put on red and live a little hindi meaning?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:10:30.342667"
        },
        "processing_time": 2308.5482120513916,
        "num_results": 10
      },
      {
        "query_id": "225798",
        "query_text": "How could you kill Wolverine?",
        "query_features": {
          "query_id": "225798",
          "query_text": "How could you kill Wolverine?",
          "query_type": "semantic",
          "length": 29,
          "word_count": 5,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "225798",
          "query_text": "How could you kill Wolverine?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:10:32.651230"
        },
        "processing_time": 2150.512218475342,
        "num_results": 10
      },
      {
        "query_id": "365363",
        "query_text": "What is the best position for first time sex?",
        "query_features": {
          "query_id": "365363",
          "query_text": "What is the best position for first time sex?",
          "query_type": "semantic",
          "length": 45,
          "word_count": 9,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "365363",
          "query_text": "What is the best position for first time sex?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:10:34.801779"
        },
        "processing_time": 2786.616563796997,
        "num_results": 10
      },
      {
        "query_id": "164263",
        "query_text": "What are the best books for JEE?",
        "query_features": {
          "query_id": "164263",
          "query_text": "What are the best books for JEE?",
          "query_type": "semantic",
          "length": 32,
          "word_count": 7,
          "is_question": true,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "164263",
          "query_text": "What are the best books for JEE?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:10:37.588420"
        },
        "processing_time": 2596.5216159820557,
        "num_results": 10
      },
      {
        "query_id": "310340",
        "query_text": "What are the signs that someone is autistic?",
        "query_features": {
          "query_id": "310340",
          "query_text": "What are the signs that someone is autistic?",
          "query_type": "semantic",
          "length": 44,
          "word_count": 8,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "310340",
          "query_text": "What are the signs that someone is autistic?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:10:40.184986"
        },
        "processing_time": 2777.113914489746,
        "num_results": 10
      },
      {
        "query_id": "369537",
        "query_text": "What is the difference between being in love and having a crush?",
        "query_features": {
          "query_id": "369537",
          "query_text": "What is the difference between being in love and having a crush?",
          "query_type": "semantic",
          "length": 64,
          "word_count": 12,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "369537",
          "query_text": "What is the difference between being in love and having a crush?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:10:42.962130"
        },
        "processing_time": 3109.42006111145,
        "num_results": 10
      },
      {
        "query_id": "513187",
        "query_text": "How do people leave North Korea?",
        "query_features": {
          "query_id": "513187",
          "query_text": "How do people leave North Korea?",
          "query_type": "semantic",
          "length": 32,
          "word_count": 6,
          "is_question": true,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "513187",
          "query_text": "How do people leave North Korea?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:10:46.071569"
        },
        "processing_time": 2342.4389362335205,
        "num_results": 10
      },
      {
        "query_id": "196688",
        "query_text": "What is the difference between a student and a scholar?",
        "query_features": {
          "query_id": "196688",
          "query_text": "What is the difference between a student and a scholar?",
          "query_type": "semantic",
          "length": 55,
          "word_count": 10,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "196688",
          "query_text": "What is the difference between a student and a scholar?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:10:48.414054"
        },
        "processing_time": 2704.155683517456,
        "num_results": 10
      },
      {
        "query_id": "137436",
        "query_text": "Why do highly intelligent people get bored quickly?",
        "query_features": {
          "query_id": "137436",
          "query_text": "Why do highly intelligent people get bored quickly?",
          "query_type": "semantic",
          "length": 51,
          "word_count": 8,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "137436",
          "query_text": "Why do highly intelligent people get bored quickly?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:10:51.118244"
        },
        "processing_time": 2399.681329727173,
        "num_results": 10
      },
      {
        "query_id": "236047",
        "query_text": "What are some best songs to listen to?",
        "query_features": {
          "query_id": "236047",
          "query_text": "What are some best songs to listen to?",
          "query_type": "semantic",
          "length": 38,
          "word_count": 8,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "236047",
          "query_text": "What are some best songs to listen to?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:10:53.518025"
        },
        "processing_time": 2669.0328121185303,
        "num_results": 10
      },
      {
        "query_id": "93263",
        "query_text": "Who is a front end web developer?",
        "query_features": {
          "query_id": "93263",
          "query_text": "Who is a front end web developer?",
          "query_type": "semantic",
          "length": 33,
          "word_count": 7,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "93263",
          "query_text": "Who is a front end web developer?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:10:56.187136"
        },
        "processing_time": 2248.950958251953,
        "num_results": 10
      },
      {
        "query_id": "51777",
        "query_text": "Gun control prevents crime?",
        "query_features": {
          "query_id": "51777",
          "query_text": "Gun control prevents crime?",
          "query_type": "semantic",
          "length": 27,
          "word_count": 4,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "51777",
          "query_text": "Gun control prevents crime?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:10:58.436080"
        },
        "processing_time": 1918.236494064331,
        "num_results": 10
      },
      {
        "query_id": "48982",
        "query_text": "How can I treat knee muscle twitches?",
        "query_features": {
          "query_id": "48982",
          "query_text": "How can I treat knee muscle twitches?",
          "query_type": "semantic",
          "length": 37,
          "word_count": 7,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "48982",
          "query_text": "How can I treat knee muscle twitches?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:11:00.354332"
        },
        "processing_time": 2247.8859424591064,
        "num_results": 10
      },
      {
        "query_id": "147882",
        "query_text": "What are some surprising things about Azerbaijan?",
        "query_features": {
          "query_id": "147882",
          "query_text": "What are some surprising things about Azerbaijan?",
          "query_type": "semantic",
          "length": 49,
          "word_count": 7,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "147882",
          "query_text": "What are some surprising things about Azerbaijan?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.9,
            "BM25": 0.09999999999999998
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22",
          "timestamp": "2025-07-19T22:11:02.602305"
        },
        "processing_time": 2443.6404705047607,
        "num_results": 10
      },
      {
        "query_id": "365666",
        "query_text": "How do I start with own business consultant firm and what are the things to be cosider to become consultant?",
        "query_features": {
          "query_id": "365666",
          "query_text": "How do I start with own business consultant firm and what are the things to be cosider to become consultant?",
          "query_type": "semantic",
          "length": 108,
          "word_count": 20,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "365666",
          "query_text": "How do I start with own business consultant firm and what are the things to be cosider to become consultant?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:11:05.046017"
        },
        "processing_time": 3858.4821224212646,
        "num_results": 10
      },
      {
        "query_id": "392165",
        "query_text": "If you were surrounded by very successful people (in any field) and you could sit with them, what question would you ask them?",
        "query_features": {
          "query_id": "392165",
          "query_text": "If you were surrounded by very successful people (in any field) and you could sit with them, what question would you ask them?",
          "query_type": "semantic",
          "length": 126,
          "word_count": 23,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "392165",
          "query_text": "If you were surrounded by very successful people (in any field) and you could sit with them, what question would you ask them?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:11:08.904533"
        },
        "processing_time": 4018.1615352630615,
        "num_results": 10
      },
      {
        "query_id": "162124",
        "query_text": "How do I get my PAN card made? Where do I apply online?",
        "query_features": {
          "query_id": "162124",
          "query_text": "How do I get my PAN card made? Where do I apply online?",
          "query_type": "semantic",
          "length": 55,
          "word_count": 13,
          "is_question": true,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "162124",
          "query_text": "How do I get my PAN card made? Where do I apply online?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:11:12.922708"
        },
        "processing_time": 2729.0570735931396,
        "num_results": 10
      },
      {
        "query_id": "245776",
        "query_text": "What are some examples of civil laws?",
        "query_features": {
          "query_id": "245776",
          "query_text": "What are some examples of civil laws?",
          "query_type": "semantic",
          "length": 37,
          "word_count": 7,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "245776",
          "query_text": "What are some examples of civil laws?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:11:15.651798"
        },
        "processing_time": 2448.5926628112793,
        "num_results": 10
      },
      {
        "query_id": "43295",
        "query_text": "What's the definition of beauty for you?",
        "query_features": {
          "query_id": "43295",
          "query_text": "What's the definition of beauty for you?",
          "query_type": "semantic",
          "length": 40,
          "word_count": 7,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "43295",
          "query_text": "What's the definition of beauty for you?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:11:18.100430"
        },
        "processing_time": 2615.58198928833,
        "num_results": 10
      },
      {
        "query_id": "209133",
        "query_text": "Why is a core used in transformers?",
        "query_features": {
          "query_id": "209133",
          "query_text": "Why is a core used in transformers?",
          "query_type": "semantic",
          "length": 35,
          "word_count": 7,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "209133",
          "query_text": "Why is a core used in transformers?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:11:20.716041"
        },
        "processing_time": 2302.173614501953,
        "num_results": 10
      },
      {
        "query_id": "327949",
        "query_text": "Where can I find prostitutes in Ahmedabad?",
        "query_features": {
          "query_id": "327949",
          "query_text": "Where can I find prostitutes in Ahmedabad?",
          "query_type": "semantic",
          "length": 42,
          "word_count": 7,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "327949",
          "query_text": "Where can I find prostitutes in Ahmedabad?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:11:23.018254"
        },
        "processing_time": 2283.721923828125,
        "num_results": 10
      },
      {
        "query_id": "346050",
        "query_text": "Can anybody help me to compare the acidity of 5-Sulfosalicylic acid and p-Toluenesulfonic acid ?",
        "query_features": {
          "query_id": "346050",
          "query_text": "Can anybody help me to compare the acidity of 5-Sulfosalicylic acid and p-Toluenesulfonic acid ?",
          "query_type": "semantic",
          "length": 96,
          "word_count": 15,
          "is_question": true,
          "has_numbers": true,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "346050",
          "query_text": "Can anybody help me to compare the acidity of 5-Sulfosalicylic acid and p-Toluenesulfonic acid ?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:11:25.302023"
        },
        "processing_time": 3228.5423278808594,
        "num_results": 10
      },
      {
        "query_id": "289207",
        "query_text": "What is your middle name, and what is its significance?",
        "query_features": {
          "query_id": "289207",
          "query_text": "What is your middle name, and what is its significance?",
          "query_type": "semantic",
          "length": 55,
          "word_count": 10,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "289207",
          "query_text": "What is your middle name, and what is its significance?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:11:28.530594"
        },
        "processing_time": 2981.0266494750977,
        "num_results": 10
      },
      {
        "query_id": "332378",
        "query_text": "I am a high school student and I want to work at NASA. What should I do?",
        "query_features": {
          "query_id": "332378",
          "query_text": "I am a high school student and I want to work at NASA. What should I do?",
          "query_type": "semantic",
          "length": 72,
          "word_count": 17,
          "is_question": true,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "332378",
          "query_text": "I am a high school student and I want to work at NASA. What should I do?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:11:31.511960"
        },
        "processing_time": 3124.2575645446777,
        "num_results": 10
      },
      {
        "query_id": "196414",
        "query_text": "How do I get phone number of any celebrity whom I like?",
        "query_features": {
          "query_id": "196414",
          "query_text": "How do I get phone number of any celebrity whom I like?",
          "query_type": "semantic",
          "length": 55,
          "word_count": 12,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "196414",
          "query_text": "How do I get phone number of any celebrity whom I like?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:11:34.636110"
        },
        "processing_time": 2776.026487350464,
        "num_results": 10
      },
      {
        "query_id": "91628",
        "query_text": "How much can you make on YouTube?",
        "query_features": {
          "query_id": "91628",
          "query_text": "How much can you make on YouTube?",
          "query_type": "semantic",
          "length": 33,
          "word_count": 7,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "91628",
          "query_text": "How much can you make on YouTube?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:11:37.412219"
        },
        "processing_time": 2435.2149963378906,
        "num_results": 10
      },
      {
        "query_id": "368400",
        "query_text": "Will there be a recession in the US in the near future?",
        "query_features": {
          "query_id": "368400",
          "query_text": "Will there be a recession in the US in the near future?",
          "query_type": "semantic",
          "length": 55,
          "word_count": 12,
          "is_question": true,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "368400",
          "query_text": "Will there be a recession in the US in the near future?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:11:39.847414"
        },
        "processing_time": 2956.840991973877,
        "num_results": 10
      },
      {
        "query_id": "116469",
        "query_text": "What are the 14 leadership skills Amazon looks for in their interviews?",
        "query_features": {
          "query_id": "116469",
          "query_text": "What are the 14 leadership skills Amazon looks for in their interviews?",
          "query_type": "semantic",
          "length": 71,
          "word_count": 12,
          "is_question": true,
          "has_numbers": true,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "116469",
          "query_text": "What are the 14 leadership skills Amazon looks for in their interviews?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:11:42.804284"
        },
        "processing_time": 3084.6803188323975,
        "num_results": 10
      },
      {
        "query_id": "235092",
        "query_text": "What can you do when you are lonely?",
        "query_features": {
          "query_id": "235092",
          "query_text": "What can you do when you are lonely?",
          "query_type": "semantic",
          "length": 36,
          "word_count": 8,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "235092",
          "query_text": "What can you do when you are lonely?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:11:45.888985"
        },
        "processing_time": 2658.057928085327,
        "num_results": 10
      },
      {
        "query_id": "478789",
        "query_text": "How do I ask a girl from Snapchat out?",
        "query_features": {
          "query_id": "478789",
          "query_text": "How do I ask a girl from Snapchat out?",
          "query_type": "semantic",
          "length": 38,
          "word_count": 9,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "478789",
          "query_text": "How do I ask a girl from Snapchat out?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:11:48.547082"
        },
        "processing_time": 2368.069887161255,
        "num_results": 10
      },
      {
        "query_id": "435347",
        "query_text": "How can I learn cakephp?",
        "query_features": {
          "query_id": "435347",
          "query_text": "How can I learn cakephp?",
          "query_type": "semantic",
          "length": 24,
          "word_count": 5,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "435347",
          "query_text": "How can I learn cakephp?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:11:50.915185"
        },
        "processing_time": 2069.2479610443115,
        "num_results": 10
      },
      {
        "query_id": "491445",
        "query_text": "How does pornhub office look like?",
        "query_features": {
          "query_id": "491445",
          "query_text": "How does pornhub office look like?",
          "query_type": "semantic",
          "length": 34,
          "word_count": 6,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "491445",
          "query_text": "How does pornhub office look like?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:11:52.984471"
        },
        "processing_time": 2291.825294494629,
        "num_results": 10
      },
      {
        "query_id": "10113",
        "query_text": "Where is starch digested? How is it digested?",
        "query_features": {
          "query_id": "10113",
          "query_text": "Where is starch digested? How is it digested?",
          "query_type": "semantic",
          "length": 45,
          "word_count": 8,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "10113",
          "query_text": "Where is starch digested? How is it digested?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:11:55.276332"
        },
        "processing_time": 2625.4355907440186,
        "num_results": 10
      },
      {
        "query_id": "385135",
        "query_text": "Do girls think about their ex boyfriends?",
        "query_features": {
          "query_id": "385135",
          "query_text": "Do girls think about their ex boyfriends?",
          "query_type": "semantic",
          "length": 41,
          "word_count": 7,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "385135",
          "query_text": "Do girls think about their ex boyfriends?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:11:57.901862"
        },
        "processing_time": 2307.973623275757,
        "num_results": 10
      },
      {
        "query_id": "431923",
        "query_text": "Can I ever get over my first love?",
        "query_features": {
          "query_id": "431923",
          "query_text": "Can I ever get over my first love?",
          "query_type": "semantic",
          "length": 34,
          "word_count": 8,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "431923",
          "query_text": "Can I ever get over my first love?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:12:00.209869"
        },
        "processing_time": 2401.6594886779785,
        "num_results": 10
      },
      {
        "query_id": "258866",
        "query_text": "What cause the British empire to lose its countries?",
        "query_features": {
          "query_id": "258866",
          "query_text": "What cause the British empire to lose its countries?",
          "query_type": "semantic",
          "length": 52,
          "word_count": 9,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "258866",
          "query_text": "What cause the British empire to lose its countries?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:02.611572"
        },
        "processing_time": 2766.9146060943604,
        "num_results": 10
      },
      {
        "query_id": "329699",
        "query_text": "What is the requirement to install kali linux 32 bit in pc?",
        "query_features": {
          "query_id": "329699",
          "query_text": "What is the requirement to install kali linux 32 bit in pc?",
          "query_type": "semantic",
          "length": 59,
          "word_count": 12,
          "is_question": true,
          "has_numbers": true,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "329699",
          "query_text": "What is the requirement to install kali linux 32 bit in pc?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:05.378524"
        },
        "processing_time": 3291.168212890625,
        "num_results": 10
      },
      {
        "query_id": "94037",
        "query_text": "What are the middle management level in software industry?",
        "query_features": {
          "query_id": "94037",
          "query_text": "What are the middle management level in software industry?",
          "query_type": "semantic",
          "length": 58,
          "word_count": 9,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "94037",
          "query_text": "What are the middle management level in software industry?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:08.669723"
        },
        "processing_time": 2967.015266418457,
        "num_results": 10
      },
      {
        "query_id": "28654",
        "query_text": "What are the new security features in 2000 rupee notes? Do you think the security features are enough to make sure nobody is able to counterfeit it?",
        "query_features": {
          "query_id": "28654",
          "query_text": "What are the new security features in 2000 rupee notes? Do you think the security features are enough to make sure nobody is able to counterfeit it?",
          "query_type": "semantic",
          "length": 148,
          "word_count": 27,
          "is_question": true,
          "has_numbers": true,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "28654",
          "query_text": "What are the new security features in 2000 rupee notes? Do you think the security features are enough to make sure nobody is able to counterfeit it?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:11.636811"
        },
        "processing_time": 5335.556745529175,
        "num_results": 10
      },
      {
        "query_id": "478514",
        "query_text": "How did Doctor Strange (2016 movie) get greenlit? What's the backstory of how the movie got made?",
        "query_features": {
          "query_id": "478514",
          "query_text": "How did Doctor Strange (2016 movie) get greenlit? What's the backstory of how the movie got made?",
          "query_type": "semantic",
          "length": 97,
          "word_count": 17,
          "is_question": true,
          "has_numbers": true,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "medical"
        },
        "routing_decision": {
          "query_id": "478514",
          "query_text": "How did Doctor Strange (2016 movie) get greenlit? What's the backstory of how the movie got made?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.5,
            "BM25": 0.5
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u533b\u7597\u9886\u57df\u5e73\u8861\u7b56\u7565 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:16.972512"
        },
        "processing_time": 3663.167953491211,
        "num_results": 10
      },
      {
        "query_id": "252105",
        "query_text": "What is the best way to start a chess game to won?",
        "query_features": {
          "query_id": "252105",
          "query_text": "What is the best way to start a chess game to won?",
          "query_type": "semantic",
          "length": 50,
          "word_count": 12,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "252105",
          "query_text": "What is the best way to start a chess game to won?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:20.635680"
        },
        "processing_time": 3038.9950275421143,
        "num_results": 10
      },
      {
        "query_id": "358878",
        "query_text": "What is the best way to break ice while starting a conversation?",
        "query_features": {
          "query_id": "358878",
          "query_text": "What is the best way to break ice while starting a conversation?",
          "query_type": "semantic",
          "length": 64,
          "word_count": 12,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "358878",
          "query_text": "What is the best way to break ice while starting a conversation?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:23.674670"
        },
        "processing_time": 2979.8593521118164,
        "num_results": 10
      },
      {
        "query_id": "389444",
        "query_text": "Why do dogs like to smell other dogs' butts?",
        "query_features": {
          "query_id": "389444",
          "query_text": "Why do dogs like to smell other dogs' butts?",
          "query_type": "semantic",
          "length": 44,
          "word_count": 9,
          "is_question": true,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "389444",
          "query_text": "Why do dogs like to smell other dogs' butts?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:26.654552"
        },
        "processing_time": 2525.0022411346436,
        "num_results": 10
      },
      {
        "query_id": "25429",
        "query_text": "Who will replace Nico Rosberg for F1 2017 season?",
        "query_features": {
          "query_id": "25429",
          "query_text": "Who will replace Nico Rosberg for F1 2017 season?",
          "query_type": "semantic",
          "length": 49,
          "word_count": 9,
          "is_question": true,
          "has_numbers": true,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "25429",
          "query_text": "Who will replace Nico Rosberg for F1 2017 season?",
          "query_type": "semantic",
          "selected_retrievers": [
            "EfficientVector",
            "BM25"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "EfficientVector": 0.8,
            "BM25": 0.2
          },
          "confidence": 0.85,
          "reasoning": "\u8bed\u4e49\u67e5\u8be2\u9002\u5408\u5411\u91cf\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:29.179590"
        },
        "processing_time": 2397.149085998535,
        "num_results": 10
      }
    ]
  },
  "scidocs": {
    "metrics": {
      "precision": 0.11,
      "recall": 0.03668965517241379,
      "mrr": 0.29191269841269846,
      "ndcg": 0.12425941263446666
    },
    "statistics": {
      "total_queries": 50,
      "avg_processing_time_ms": 473.2374429702759,
      "query_type_distribution": {
        "entity": 39,
        "keyword": 11
      },
      "fusion_method_distribution": {
        "RRF": 44,
        "LinearOptimized": 4,
        "LinearEqual": 2
      },
      "retriever_usage": {
        "BM25": 50,
        "EfficientVector": 50
      },
      "router_stats": {
        "routing_strategy": "hybrid",
        "available_retrievers": [
          "BM25",
          "EfficientVector",
          "SemanticBM25"
        ],
        "available_fusion_methods": [
          "RRF",
          "LinearEqual",
          "LinearOptimized"
        ],
        "total_routing_decisions": 50,
        "performance_records": 0,
        "query_type_distribution": {
          "entity": 39,
          "keyword": 11
        },
        "fusion_method_distribution": {
          "RRF": 44,
          "LinearOptimized": 4,
          "LinearEqual": 2
        },
        "average_confidence": 0.7609999999999999
      },
      "fusion_stats": {
        "total_fusions": 50,
        "method_usage": {
          "RRF": 44,
          "LinearOptimized": 4,
          "LinearEqual": 2
        },
        "avg_scores": {},
        "method_percentages": {
          "RRF": 88.0,
          "LinearOptimized": 8.0,
          "LinearEqual": 4.0
        }
      }
    },
    "query_details": [
      {
        "query_id": "78878e95797e03d4968b09f40979585b6c56dac3",
        "query_text": "Designing a Smart Museum: When Cultural Heritage Joins IoT",
        "query_features": {
          "query_id": "78878e95797e03d4968b09f40979585b6c56dac3",
          "query_text": "Designing a Smart Museum: When Cultural Heritage Joins IoT",
          "query_type": "entity",
          "length": 58,
          "word_count": 9,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "78878e95797e03d4968b09f40979585b6c56dac3",
          "query_text": "Designing a Smart Museum: When Cultural Heritage Joins IoT",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:34.174307"
        },
        "processing_time": 559.1685771942139,
        "num_results": 10
      },
      {
        "query_id": "399acab2bee6eccbfffe4a2ce688b6b1075e9c5e",
        "query_text": "Eyeriss: a spatial architecture for energy-efficient dataflow for convolutional neural networks",
        "query_features": {
          "query_id": "399acab2bee6eccbfffe4a2ce688b6b1075e9c5e",
          "query_text": "Eyeriss: a spatial architecture for energy-efficient dataflow for convolutional neural networks",
          "query_type": "keyword",
          "length": 95,
          "word_count": 11,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "399acab2bee6eccbfffe4a2ce688b6b1075e9c5e",
          "query_text": "Eyeriss: a spatial architecture for energy-efficient dataflow for convolutional neural networks",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:34.733464"
        },
        "processing_time": 483.675479888916,
        "num_results": 10
      },
      {
        "query_id": "8501e330d78391f4e690886a8eb8fac867704ea6",
        "query_text": "Train longer, generalize better: closing the generalization gap in large batch training of neural networks",
        "query_features": {
          "query_id": "8501e330d78391f4e690886a8eb8fac867704ea6",
          "query_text": "Train longer, generalize better: closing the generalization gap in large batch training of neural networks",
          "query_type": "keyword",
          "length": 106,
          "word_count": 15,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "8501e330d78391f4e690886a8eb8fac867704ea6",
          "query_text": "Train longer, generalize better: closing the generalization gap in large batch training of neural networks",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:35.217166"
        },
        "processing_time": 525.5203247070312,
        "num_results": 10
      },
      {
        "query_id": "cab59587e4b2dd441198cd37e0038cace6b6531e",
        "query_text": "A Two-Step Method for Clustering Mixed Categroical and Numeric Data",
        "query_features": {
          "query_id": "cab59587e4b2dd441198cd37e0038cace6b6531e",
          "query_text": "A Two-Step Method for Clustering Mixed Categroical and Numeric Data",
          "query_type": "entity",
          "length": 67,
          "word_count": 10,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "cab59587e4b2dd441198cd37e0038cace6b6531e",
          "query_text": "A Two-Step Method for Clustering Mixed Categroical and Numeric Data",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:35.742700"
        },
        "processing_time": 503.79228591918945,
        "num_results": 10
      },
      {
        "query_id": "c6c171d2a9be192d60af7b434e4ba2fcbbad7f48",
        "query_text": "Memory-augmented Neural Machine Translation",
        "query_features": {
          "query_id": "c6c171d2a9be192d60af7b434e4ba2fcbbad7f48",
          "query_text": "Memory-augmented Neural Machine Translation",
          "query_type": "entity",
          "length": 43,
          "word_count": 4,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "c6c171d2a9be192d60af7b434e4ba2fcbbad7f48",
          "query_text": "Memory-augmented Neural Machine Translation",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408",
          "timestamp": "2025-07-19T22:12:36.246521"
        },
        "processing_time": 415.3590202331543,
        "num_results": 10
      },
      {
        "query_id": "3f42c32316c50b4a03de8c4597159c68a8d07776",
        "query_text": "Feature Selection as a One-Player Game",
        "query_features": {
          "query_id": "3f42c32316c50b4a03de8c4597159c68a8d07776",
          "query_text": "Feature Selection as a One-Player Game",
          "query_type": "entity",
          "length": 38,
          "word_count": 6,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "3f42c32316c50b4a03de8c4597159c68a8d07776",
          "query_text": "Feature Selection as a One-Player Game",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408",
          "timestamp": "2025-07-19T22:12:36.661914"
        },
        "processing_time": 430.2389621734619,
        "num_results": 10
      },
      {
        "query_id": "1995f186d00e9fdc1957c76666145c923fa55cf3",
        "query_text": "Smoothing of Piecewise Linear Paths",
        "query_features": {
          "query_id": "1995f186d00e9fdc1957c76666145c923fa55cf3",
          "query_text": "Smoothing of Piecewise Linear Paths",
          "query_type": "entity",
          "length": 35,
          "word_count": 5,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "1995f186d00e9fdc1957c76666145c923fa55cf3",
          "query_text": "Smoothing of Piecewise Linear Paths",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408",
          "timestamp": "2025-07-19T22:12:37.092168"
        },
        "processing_time": 439.8789405822754,
        "num_results": 10
      },
      {
        "query_id": "3cfa669b42a1e0e87bf3aca4d491039495ef87f8",
        "query_text": "Enabling Technologies for the Internet of Health Things",
        "query_features": {
          "query_id": "3cfa669b42a1e0e87bf3aca4d491039495ef87f8",
          "query_text": "Enabling Technologies for the Internet of Health Things",
          "query_type": "entity",
          "length": 55,
          "word_count": 8,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "medical"
        },
        "routing_decision": {
          "query_id": "3cfa669b42a1e0e87bf3aca4d491039495ef87f8",
          "query_text": "Enabling Technologies for the Internet of Health Things",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u533b\u7597\u9886\u57df\u5e73\u8861\u7b56\u7565",
          "timestamp": "2025-07-19T22:12:37.532071"
        },
        "processing_time": 474.6084213256836,
        "num_results": 10
      },
      {
        "query_id": "4312a1945d6eaa6429fe89a0dec5583f7855e0ab",
        "query_text": "Grid-based mapping and tracking in dynamic environments using a uniform evidential environment representation",
        "query_features": {
          "query_id": "4312a1945d6eaa6429fe89a0dec5583f7855e0ab",
          "query_text": "Grid-based mapping and tracking in dynamic environments using a uniform evidential environment representation",
          "query_type": "keyword",
          "length": 109,
          "word_count": 13,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "4312a1945d6eaa6429fe89a0dec5583f7855e0ab",
          "query_text": "Grid-based mapping and tracking in dynamic environments using a uniform evidential environment representation",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.7,
            "EfficientVector": 0.3
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:38.006725"
        },
        "processing_time": 509.30237770080566,
        "num_results": 10
      },
      {
        "query_id": "fa8042d025895e22af2d9df3ffb9f67438610fcc",
        "query_text": "Two-Phase Malicious Web Page Detection Scheme Using Misuse and Anomaly Detection",
        "query_features": {
          "query_id": "fa8042d025895e22af2d9df3ffb9f67438610fcc",
          "query_text": "Two-Phase Malicious Web Page Detection Scheme Using Misuse and Anomaly Detection",
          "query_type": "entity",
          "length": 80,
          "word_count": 11,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "fa8042d025895e22af2d9df3ffb9f67438610fcc",
          "query_text": "Two-Phase Malicious Web Page Detection Scheme Using Misuse and Anomaly Detection",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:38.516039"
        },
        "processing_time": 504.13012504577637,
        "num_results": 10
      },
      {
        "query_id": "498aad3cb4d2b8e8ff1e68a40be7dec27e8139f4",
        "query_text": "Modulation Technique for Single-Phase Transformerless Photovoltaic Inverters With Reactive Power Capability",
        "query_features": {
          "query_id": "498aad3cb4d2b8e8ff1e68a40be7dec27e8139f4",
          "query_text": "Modulation Technique for Single-Phase Transformerless Photovoltaic Inverters With Reactive Power Capability",
          "query_type": "entity",
          "length": 107,
          "word_count": 11,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "498aad3cb4d2b8e8ff1e68a40be7dec27e8139f4",
          "query_text": "Modulation Technique for Single-Phase Transformerless Photovoltaic Inverters With Reactive Power Capability",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:39.020190"
        },
        "processing_time": 502.7291774749756,
        "num_results": 10
      },
      {
        "query_id": "bbe8c5e53ca6e4db115afeaaad2be268f039f10d",
        "query_text": "DeepSim: deep learning code functional similarity",
        "query_features": {
          "query_id": "bbe8c5e53ca6e4db115afeaaad2be268f039f10d",
          "query_text": "DeepSim: deep learning code functional similarity",
          "query_type": "keyword",
          "length": 49,
          "word_count": 6,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "bbe8c5e53ca6e4db115afeaaad2be268f039f10d",
          "query_text": "DeepSim: deep learning code functional similarity",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "LinearOptimized",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22",
          "timestamp": "2025-07-19T22:12:39.522948"
        },
        "processing_time": 425.08888244628906,
        "num_results": 10
      },
      {
        "query_id": "83591848730f3fc7f208d4646ed4338c237bd161",
        "query_text": "Providing Context-Aware Security for IoT Environments Through Context Sharing Feature",
        "query_features": {
          "query_id": "83591848730f3fc7f208d4646ed4338c237bd161",
          "query_text": "Providing Context-Aware Security for IoT Environments Through Context Sharing Feature",
          "query_type": "entity",
          "length": 85,
          "word_count": 10,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "83591848730f3fc7f208d4646ed4338c237bd161",
          "query_text": "Providing Context-Aware Security for IoT Environments Through Context Sharing Feature",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:39.948063"
        },
        "processing_time": 474.87735748291016,
        "num_results": 10
      },
      {
        "query_id": "639910e5fa8d6f096a282847ca3e820550bbbe8e",
        "query_text": "Query Attention GloVe GloVe CNN Attention Flow Layer Modeling Layer Output Layer",
        "query_features": {
          "query_id": "639910e5fa8d6f096a282847ca3e820550bbbe8e",
          "query_text": "Query Attention GloVe GloVe CNN Attention Flow Layer Modeling Layer Output Layer",
          "query_type": "entity",
          "length": 80,
          "word_count": 12,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "639910e5fa8d6f096a282847ca3e820550bbbe8e",
          "query_text": "Query Attention GloVe GloVe CNN Attention Flow Layer Modeling Layer Output Layer",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:40.422958"
        },
        "processing_time": 460.1707458496094,
        "num_results": 10
      },
      {
        "query_id": "3f95e155b1c40911149fe994197a502ef44ebbbe",
        "query_text": "Music emotion recognition: the role of individuality",
        "query_features": {
          "query_id": "3f95e155b1c40911149fe994197a502ef44ebbbe",
          "query_text": "Music emotion recognition: the role of individuality",
          "query_type": "keyword",
          "length": 52,
          "word_count": 7,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "3f95e155b1c40911149fe994197a502ef44ebbbe",
          "query_text": "Music emotion recognition: the role of individuality",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "LinearOptimized",
          "fusion_weights": {
            "BM25": 0.7,
            "EfficientVector": 0.3
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:12:40.883164"
        },
        "processing_time": 464.8618698120117,
        "num_results": 10
      },
      {
        "query_id": "725ed843566051638d023ebfdb0311def12cba2a",
        "query_text": "\u201cMask-Bot 2i\u201d: An active customisable robotic head with interchangeable face",
        "query_features": {
          "query_id": "725ed843566051638d023ebfdb0311def12cba2a",
          "query_text": "\u201cMask-Bot 2i\u201d: An active customisable robotic head with interchangeable face",
          "query_type": "keyword",
          "length": 76,
          "word_count": 10,
          "is_question": false,
          "has_numbers": true,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "725ed843566051638d023ebfdb0311def12cba2a",
          "query_text": "\u201cMask-Bot 2i\u201d: An active customisable robotic head with interchangeable face",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.7,
            "EfficientVector": 0.3
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:41.348068"
        },
        "processing_time": 472.7818965911865,
        "num_results": 10
      },
      {
        "query_id": "4fa89f6ffef921580718222c55fa17973a7c366d",
        "query_text": "Shadow Detection with Conditional Generative Adversarial Networks",
        "query_features": {
          "query_id": "4fa89f6ffef921580718222c55fa17973a7c366d",
          "query_text": "Shadow Detection with Conditional Generative Adversarial Networks",
          "query_type": "entity",
          "length": 65,
          "word_count": 7,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "4fa89f6ffef921580718222c55fa17973a7c366d",
          "query_text": "Shadow Detection with Conditional Generative Adversarial Networks",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408",
          "timestamp": "2025-07-19T22:12:41.820849"
        },
        "processing_time": 466.8562412261963,
        "num_results": 10
      },
      {
        "query_id": "3d23666c6d97d6ba3c86044d83c697821084bed6",
        "query_text": "Variational Sequential Labelers for Semi-Supervised Learning",
        "query_features": {
          "query_id": "3d23666c6d97d6ba3c86044d83c697821084bed6",
          "query_text": "Variational Sequential Labelers for Semi-Supervised Learning",
          "query_type": "entity",
          "length": 60,
          "word_count": 6,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "3d23666c6d97d6ba3c86044d83c697821084bed6",
          "query_text": "Variational Sequential Labelers for Semi-Supervised Learning",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22",
          "timestamp": "2025-07-19T22:12:42.287758"
        },
        "processing_time": 467.8018093109131,
        "num_results": 10
      },
      {
        "query_id": "04e4034344bda5c97015ea634e6eb1b65ef3a898",
        "query_text": "Agile Team Perceptions of Productivity Factors",
        "query_features": {
          "query_id": "04e4034344bda5c97015ea634e6eb1b65ef3a898",
          "query_text": "Agile Team Perceptions of Productivity Factors",
          "query_type": "entity",
          "length": 46,
          "word_count": 6,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "04e4034344bda5c97015ea634e6eb1b65ef3a898",
          "query_text": "Agile Team Perceptions of Productivity Factors",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408",
          "timestamp": "2025-07-19T22:12:42.755578"
        },
        "processing_time": 447.20935821533203,
        "num_results": 10
      },
      {
        "query_id": "d6b56cc6e05300426b6194dd3f6a38720678827e",
        "query_text": "Redirected Walking in Virtual Reality",
        "query_features": {
          "query_id": "d6b56cc6e05300426b6194dd3f6a38720678827e",
          "query_text": "Redirected Walking in Virtual Reality",
          "query_type": "entity",
          "length": 37,
          "word_count": 5,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "d6b56cc6e05300426b6194dd3f6a38720678827e",
          "query_text": "Redirected Walking in Virtual Reality",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408",
          "timestamp": "2025-07-19T22:12:43.202830"
        },
        "processing_time": 441.14089012145996,
        "num_results": 10
      },
      {
        "query_id": "0c3ffd5f1b577e38604f361ee71feb312b5b0cab",
        "query_text": "Solving Constraint Satisfaction Problems through Belief Propagation-guided decimation",
        "query_features": {
          "query_id": "0c3ffd5f1b577e38604f361ee71feb312b5b0cab",
          "query_text": "Solving Constraint Satisfaction Problems through Belief Propagation-guided decimation",
          "query_type": "entity",
          "length": 85,
          "word_count": 8,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "0c3ffd5f1b577e38604f361ee71feb312b5b0cab",
          "query_text": "Solving Constraint Satisfaction Problems through Belief Propagation-guided decimation",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22",
          "timestamp": "2025-07-19T22:12:43.643990"
        },
        "processing_time": 438.6556148529053,
        "num_results": 10
      },
      {
        "query_id": "01273bd34dacfe9ef887b320f36934d2f9fa9b34",
        "query_text": "Image-Guided Nanopositioning Scheme for SEM",
        "query_features": {
          "query_id": "01273bd34dacfe9ef887b320f36934d2f9fa9b34",
          "query_text": "Image-Guided Nanopositioning Scheme for SEM",
          "query_type": "entity",
          "length": 43,
          "word_count": 5,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "01273bd34dacfe9ef887b320f36934d2f9fa9b34",
          "query_text": "Image-Guided Nanopositioning Scheme for SEM",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408",
          "timestamp": "2025-07-19T22:12:44.082675"
        },
        "processing_time": 447.6652145385742,
        "num_results": 10
      },
      {
        "query_id": "f0ea85fb243d92d43b67e64ddf8721cde650c864",
        "query_text": "A learning-based approach to text image retrieval: using CNN features and improved similarity metrics",
        "query_features": {
          "query_id": "f0ea85fb243d92d43b67e64ddf8721cde650c864",
          "query_text": "A learning-based approach to text image retrieval: using CNN features and improved similarity metrics",
          "query_type": "entity",
          "length": 101,
          "word_count": 14,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "f0ea85fb243d92d43b67e64ddf8721cde650c864",
          "query_text": "A learning-based approach to text image retrieval: using CNN features and improved similarity metrics",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:44.530384"
        },
        "processing_time": 516.3180828094482,
        "num_results": 10
      },
      {
        "query_id": "725f8182eac9bd6f9fa428ba90f43cbce891ac78",
        "query_text": "Improved keyword spotting based on keyword/garbage models",
        "query_features": {
          "query_id": "725f8182eac9bd6f9fa428ba90f43cbce891ac78",
          "query_text": "Improved keyword spotting based on keyword/garbage models",
          "query_type": "keyword",
          "length": 57,
          "word_count": 7,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "725f8182eac9bd6f9fa428ba90f43cbce891ac78",
          "query_text": "Improved keyword spotting based on keyword/garbage models",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "LinearOptimized",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22",
          "timestamp": "2025-07-19T22:12:45.046714"
        },
        "processing_time": 456.09092712402344,
        "num_results": 10
      },
      {
        "query_id": "6ae4d0b388aa9262e80c3eedc1cb3e5f06842368",
        "query_text": "Visualization of complex attacks and state of attacked network",
        "query_features": {
          "query_id": "6ae4d0b388aa9262e80c3eedc1cb3e5f06842368",
          "query_text": "Visualization of complex attacks and state of attacked network",
          "query_type": "keyword",
          "length": 62,
          "word_count": 9,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "6ae4d0b388aa9262e80c3eedc1cb3e5f06842368",
          "query_text": "Visualization of complex attacks and state of attacked network",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.7,
            "EfficientVector": 0.3
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:45.502868"
        },
        "processing_time": 486.7990016937256,
        "num_results": 10
      },
      {
        "query_id": "3e2d7b31f691f42f141e9f9ecd455c4879292be9",
        "query_text": "Machine Learning Approaches for Failure Type Detection and Predictive Maintenance",
        "query_features": {
          "query_id": "3e2d7b31f691f42f141e9f9ecd455c4879292be9",
          "query_text": "Machine Learning Approaches for Failure Type Detection and Predictive Maintenance",
          "query_type": "entity",
          "length": 81,
          "word_count": 10,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "3e2d7b31f691f42f141e9f9ecd455c4879292be9",
          "query_text": "Machine Learning Approaches for Failure Type Detection and Predictive Maintenance",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:45.989648"
        },
        "processing_time": 481.123685836792,
        "num_results": 10
      },
      {
        "query_id": "c4c47ebf6454e3c5a8417c580c8ecf694e34ad49",
        "query_text": "Comparison of Approximate Methods for Handling Hyperparameters",
        "query_features": {
          "query_id": "c4c47ebf6454e3c5a8417c580c8ecf694e34ad49",
          "query_text": "Comparison of Approximate Methods for Handling Hyperparameters",
          "query_type": "entity",
          "length": 62,
          "word_count": 7,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "c4c47ebf6454e3c5a8417c580c8ecf694e34ad49",
          "query_text": "Comparison of Approximate Methods for Handling Hyperparameters",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408",
          "timestamp": "2025-07-19T22:12:46.470812"
        },
        "processing_time": 471.0533618927002,
        "num_results": 10
      },
      {
        "query_id": "a6e4beb28b345fce7470da122b4e45e2cd0dcd12",
        "query_text": "A Time-Restricted Self-Attention Layer for ASR",
        "query_features": {
          "query_id": "a6e4beb28b345fce7470da122b4e45e2cd0dcd12",
          "query_text": "A Time-Restricted Self-Attention Layer for ASR",
          "query_type": "entity",
          "length": 46,
          "word_count": 6,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "a6e4beb28b345fce7470da122b4e45e2cd0dcd12",
          "query_text": "A Time-Restricted Self-Attention Layer for ASR",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408",
          "timestamp": "2025-07-19T22:12:46.941892"
        },
        "processing_time": 460.4349136352539,
        "num_results": 10
      },
      {
        "query_id": "3b1cd78a7b49711729f3c58ec6d69bac9bf6e51e",
        "query_text": "Anatomy of a web-scale resale market: a data mining approach",
        "query_features": {
          "query_id": "3b1cd78a7b49711729f3c58ec6d69bac9bf6e51e",
          "query_text": "Anatomy of a web-scale resale market: a data mining approach",
          "query_type": "keyword",
          "length": 60,
          "word_count": 10,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "complex",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "3b1cd78a7b49711729f3c58ec6d69bac9bf6e51e",
          "query_text": "Anatomy of a web-scale resale market: a data mining approach",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.7999999999999999,
            "EfficientVector": 0.20000000000000007
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:47.402361"
        },
        "processing_time": 466.4440155029297,
        "num_results": 10
      },
      {
        "query_id": "566e31a4ad34b39b6d8a1953d77d9f74da135a2a",
        "query_text": "Automatic road network extraction from UAV image in mountain area",
        "query_features": {
          "query_id": "566e31a4ad34b39b6d8a1953d77d9f74da135a2a",
          "query_text": "Automatic road network extraction from UAV image in mountain area",
          "query_type": "entity",
          "length": 65,
          "word_count": 10,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "566e31a4ad34b39b6d8a1953d77d9f74da135a2a",
          "query_text": "Automatic road network extraction from UAV image in mountain area",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:47.868810"
        },
        "processing_time": 474.1933345794678,
        "num_results": 10
      },
      {
        "query_id": "1e1c56608f9dca5281bd79c7dfbfb058aab25472",
        "query_text": "Colorization using optimization",
        "query_features": {
          "query_id": "1e1c56608f9dca5281bd79c7dfbfb058aab25472",
          "query_text": "Colorization using optimization",
          "query_type": "keyword",
          "length": 31,
          "word_count": 3,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "simple",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "1e1c56608f9dca5281bd79c7dfbfb058aab25472",
          "query_text": "Colorization using optimization",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "LinearEqual",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u7b80\u5355\u67e5\u8be2\u4f7f\u7528\u7ebf\u6027\u878d\u5408",
          "timestamp": "2025-07-19T22:12:48.343039"
        },
        "processing_time": 411.29255294799805,
        "num_results": 10
      },
      {
        "query_id": "89750bf1480ffea3ac18e5271cc87589fc5709ca",
        "query_text": "MOMCC: Market-oriented architecture for Mobile Cloud Computing based on Service Oriented Architecture",
        "query_features": {
          "query_id": "89750bf1480ffea3ac18e5271cc87589fc5709ca",
          "query_text": "MOMCC: Market-oriented architecture for Mobile Cloud Computing based on Service Oriented Architecture",
          "query_type": "entity",
          "length": 101,
          "word_count": 12,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "financial"
        },
        "routing_decision": {
          "query_id": "89750bf1480ffea3ac18e5271cc87589fc5709ca",
          "query_text": "MOMCC: Market-oriented architecture for Mobile Cloud Computing based on Service Oriented Architecture",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.7,
            "EfficientVector": 0.30000000000000004
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u91d1\u878d\u9886\u57df\u589e\u5f3aBM25\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:48.754352"
        },
        "processing_time": 492.9208755493164,
        "num_results": 10
      },
      {
        "query_id": "e9c313fb4cfb8e31cd5ab80ef692dd30f27b70bf",
        "query_text": "The Impact of Internal Social Media Usage on Organizational Socialization and Commitment",
        "query_features": {
          "query_id": "e9c313fb4cfb8e31cd5ab80ef692dd30f27b70bf",
          "query_text": "The Impact of Internal Social Media Usage on Organizational Socialization and Commitment",
          "query_type": "entity",
          "length": 88,
          "word_count": 12,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "e9c313fb4cfb8e31cd5ab80ef692dd30f27b70bf",
          "query_text": "The Impact of Internal Social Media Usage on Organizational Socialization and Commitment",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:49.247321"
        },
        "processing_time": 521.8658447265625,
        "num_results": 10
      },
      {
        "query_id": "689f8d21021c0c9b9678d5a7903f9e9442380113",
        "query_text": "On The Differential Privacy of Thompson Sampling With Gaussian Prior",
        "query_features": {
          "query_id": "689f8d21021c0c9b9678d5a7903f9e9442380113",
          "query_text": "On The Differential Privacy of Thompson Sampling With Gaussian Prior",
          "query_type": "entity",
          "length": 68,
          "word_count": 10,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "689f8d21021c0c9b9678d5a7903f9e9442380113",
          "query_text": "On The Differential Privacy of Thompson Sampling With Gaussian Prior",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:49.769190"
        },
        "processing_time": 494.9781894683838,
        "num_results": 10
      },
      {
        "query_id": "1066b8c0aaed299874e1989998635dcb879bcd0f",
        "query_text": "Perspectives to Predict Dropout in University Students with Machine Learning",
        "query_features": {
          "query_id": "1066b8c0aaed299874e1989998635dcb879bcd0f",
          "query_text": "Perspectives to Predict Dropout in University Students with Machine Learning",
          "query_type": "entity",
          "length": 76,
          "word_count": 10,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "1066b8c0aaed299874e1989998635dcb879bcd0f",
          "query_text": "Perspectives to Predict Dropout in University Students with Machine Learning",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:50.264189"
        },
        "processing_time": 472.74065017700195,
        "num_results": 10
      },
      {
        "query_id": "6745710034803993433dd42001a860d70c99f75c",
        "query_text": "Deep Recurrent Models with Fast-Forward Connections for Neural Machine Translation",
        "query_features": {
          "query_id": "6745710034803993433dd42001a860d70c99f75c",
          "query_text": "Deep Recurrent Models with Fast-Forward Connections for Neural Machine Translation",
          "query_type": "entity",
          "length": 82,
          "word_count": 10,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "6745710034803993433dd42001a860d70c99f75c",
          "query_text": "Deep Recurrent Models with Fast-Forward Connections for Neural Machine Translation",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:50.736952"
        },
        "processing_time": 469.07687187194824,
        "num_results": 10
      },
      {
        "query_id": "29da485e2e8c78d9646d1efb25986e5753269354",
        "query_text": "Propagating Uncertainty through the tanh Function with Application to Reservoir Computing",
        "query_features": {
          "query_id": "29da485e2e8c78d9646d1efb25986e5753269354",
          "query_text": "Propagating Uncertainty through the tanh Function with Application to Reservoir Computing",
          "query_type": "entity",
          "length": 89,
          "word_count": 11,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "29da485e2e8c78d9646d1efb25986e5753269354",
          "query_text": "Propagating Uncertainty through the tanh Function with Application to Reservoir Computing",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:51.206053"
        },
        "processing_time": 497.8299140930176,
        "num_results": 10
      },
      {
        "query_id": "a65196dfff31425281c690a7f2ca65247147da6b",
        "query_text": "Unsupervised Diverse Colorization via Generative Adversarial Networks",
        "query_features": {
          "query_id": "a65196dfff31425281c690a7f2ca65247147da6b",
          "query_text": "Unsupervised Diverse Colorization via Generative Adversarial Networks",
          "query_type": "entity",
          "length": 69,
          "word_count": 7,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "a65196dfff31425281c690a7f2ca65247147da6b",
          "query_text": "Unsupervised Diverse Colorization via Generative Adversarial Networks",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22",
          "timestamp": "2025-07-19T22:12:51.703906"
        },
        "processing_time": 441.6329860687256,
        "num_results": 10
      },
      {
        "query_id": "699896507c186df548f7060be5317984bffd756a",
        "query_text": "Rumor Detection and Classification for Twitter Data",
        "query_features": {
          "query_id": "699896507c186df548f7060be5317984bffd756a",
          "query_text": "Rumor Detection and Classification for Twitter Data",
          "query_type": "entity",
          "length": 51,
          "word_count": 7,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "699896507c186df548f7060be5317984bffd756a",
          "query_text": "Rumor Detection and Classification for Twitter Data",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22",
          "timestamp": "2025-07-19T22:12:52.145569"
        },
        "processing_time": 462.050199508667,
        "num_results": 10
      },
      {
        "query_id": "41b807511a65feac98485427597f9b45c892595b",
        "query_text": "Learning Semantic Similarity",
        "query_features": {
          "query_id": "41b807511a65feac98485427597f9b45c892595b",
          "query_text": "Learning Semantic Similarity",
          "query_type": "entity",
          "length": 28,
          "word_count": 3,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "simple",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "41b807511a65feac98485427597f9b45c892595b",
          "query_text": "Learning Semantic Similarity",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "LinearEqual",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u7b80\u5355\u67e5\u8be2\u4f7f\u7528\u7ebf\u6027\u878d\u5408",
          "timestamp": "2025-07-19T22:12:52.607690"
        },
        "processing_time": 419.90113258361816,
        "num_results": 10
      },
      {
        "query_id": "2ecad6cdccc33f707dfe4334883538918de50bb8",
        "query_text": "Client-Driven Network-level QoE fairness for Encrypted 'DASH-S'",
        "query_features": {
          "query_id": "2ecad6cdccc33f707dfe4334883538918de50bb8",
          "query_text": "Client-Driven Network-level QoE fairness for Encrypted 'DASH-S'",
          "query_type": "entity",
          "length": 63,
          "word_count": 7,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "2ecad6cdccc33f707dfe4334883538918de50bb8",
          "query_text": "Client-Driven Network-level QoE fairness for Encrypted 'DASH-S'",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22",
          "timestamp": "2025-07-19T22:12:53.027611"
        },
        "processing_time": 458.88257026672363,
        "num_results": 10
      },
      {
        "query_id": "425a2cb778130d0fd57d00eaf3cbe347c4ee7641",
        "query_text": "Real-time Semi-Global Matching on the CPU",
        "query_features": {
          "query_id": "425a2cb778130d0fd57d00eaf3cbe347c4ee7641",
          "query_text": "Real-time Semi-Global Matching on the CPU",
          "query_type": "entity",
          "length": 41,
          "word_count": 6,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "425a2cb778130d0fd57d00eaf3cbe347c4ee7641",
          "query_text": "Real-time Semi-Global Matching on the CPU",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408",
          "timestamp": "2025-07-19T22:12:53.486525"
        },
        "processing_time": 468.83702278137207,
        "num_results": 10
      },
      {
        "query_id": "c2ea4bf0282b9b39a6ba773581332bb0587ec4ab",
        "query_text": "SPAM E-MAIL DETECTION USING CLASSIFIERS AND ADABOOST TECHNIQUE",
        "query_features": {
          "query_id": "c2ea4bf0282b9b39a6ba773581332bb0587ec4ab",
          "query_text": "SPAM E-MAIL DETECTION USING CLASSIFIERS AND ADABOOST TECHNIQUE",
          "query_type": "entity",
          "length": 62,
          "word_count": 8,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "c2ea4bf0282b9b39a6ba773581332bb0587ec4ab",
          "query_text": "SPAM E-MAIL DETECTION USING CLASSIFIERS AND ADABOOST TECHNIQUE",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22",
          "timestamp": "2025-07-19T22:12:53.955383"
        },
        "processing_time": 469.7697162628174,
        "num_results": 10
      },
      {
        "query_id": "9767665504e617d6efbf4630046a377a1383a2bd",
        "query_text": "The Utilibot Project : An Autonomous Mobile Robot Based on Utilitarianism",
        "query_features": {
          "query_id": "9767665504e617d6efbf4630046a377a1383a2bd",
          "query_text": "The Utilibot Project : An Autonomous Mobile Robot Based on Utilitarianism",
          "query_type": "entity",
          "length": 73,
          "word_count": 11,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "9767665504e617d6efbf4630046a377a1383a2bd",
          "query_text": "The Utilibot Project : An Autonomous Mobile Robot Based on Utilitarianism",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:54.425183"
        },
        "processing_time": 480.0119400024414,
        "num_results": 10
      },
      {
        "query_id": "29b28c7699a63c02bb3e3c0aaaeb4de6811383b4",
        "query_text": "Towards a Shared Ledger Business Collaboration Language Based on Data-Aware Processes",
        "query_features": {
          "query_id": "29b28c7699a63c02bb3e3c0aaaeb4de6811383b4",
          "query_text": "Towards a Shared Ledger Business Collaboration Language Based on Data-Aware Processes",
          "query_type": "entity",
          "length": 85,
          "word_count": 11,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "29b28c7699a63c02bb3e3c0aaaeb4de6811383b4",
          "query_text": "Towards a Shared Ledger Business Collaboration Language Based on Data-Aware Processes",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:54.905220"
        },
        "processing_time": 480.19981384277344,
        "num_results": 10
      },
      {
        "query_id": "ba8e624dac40100f10162eaa3d4034904bc08f48",
        "query_text": "Intelligent phishing url detection using association rule mining",
        "query_features": {
          "query_id": "ba8e624dac40100f10162eaa3d4034904bc08f48",
          "query_text": "Intelligent phishing url detection using association rule mining",
          "query_type": "keyword",
          "length": 64,
          "word_count": 8,
          "is_question": false,
          "has_numbers": false,
          "has_entities": false,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "ba8e624dac40100f10162eaa3d4034904bc08f48",
          "query_text": "Intelligent phishing url detection using association rule mining",
          "query_type": "keyword",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "LinearOptimized",
          "fusion_weights": {
            "BM25": 0.7,
            "EfficientVector": 0.3
          },
          "confidence": 0.8,
          "reasoning": "\u5173\u952e\u8bcd\u67e5\u8be2\u9002\u5408BM25\u68c0\u7d22\u5668",
          "timestamp": "2025-07-19T22:12:55.385452"
        },
        "processing_time": 446.9778537750244,
        "num_results": 10
      },
      {
        "query_id": "0e5cde86bb767fcf4d0dd07f140bcf5292b4fd7b",
        "query_text": "The Browsemaps: Collaborative Filtering at LinkedIn",
        "query_features": {
          "query_id": "0e5cde86bb767fcf4d0dd07f140bcf5292b4fd7b",
          "query_text": "The Browsemaps: Collaborative Filtering at LinkedIn",
          "query_type": "entity",
          "length": 51,
          "word_count": 6,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "medium",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "0e5cde86bb767fcf4d0dd07f140bcf5292b4fd7b",
          "query_text": "The Browsemaps: Collaborative Filtering at LinkedIn",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408",
          "timestamp": "2025-07-19T22:12:55.832442"
        },
        "processing_time": 445.8303451538086,
        "num_results": 10
      },
      {
        "query_id": "304899db87ea51fa65eb562ecc918cb2ebeb41ee",
        "query_text": "A 64-Element 28-GHz Phased-Array Transceiver With 52-dBm EIRP and 8\u201312-Gb/s 5G Link at 300 Meters Without Any Calibration",
        "query_features": {
          "query_id": "304899db87ea51fa65eb562ecc918cb2ebeb41ee",
          "query_text": "A 64-Element 28-GHz Phased-Array Transceiver With 52-dBm EIRP and 8\u201312-Gb/s 5G Link at 300 Meters Without Any Calibration",
          "query_type": "entity",
          "length": 121,
          "word_count": 18,
          "is_question": false,
          "has_numbers": true,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "304899db87ea51fa65eb562ecc918cb2ebeb41ee",
          "query_text": "A 64-Element 28-GHz Phased-Array Transceiver With 52-dBm EIRP and 8\u201312-Gb/s 5G Link at 300 Meters Without Any Calibration",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:56.278316"
        },
        "processing_time": 529.231071472168,
        "num_results": 10
      },
      {
        "query_id": "ddbb6e0913ac127004be73e2d4097513a8f02d37",
        "query_text": "Face Detection Using Quantized Skin Color Regions Merging and Wavelet Packet Analysis",
        "query_features": {
          "query_id": "ddbb6e0913ac127004be73e2d4097513a8f02d37",
          "query_text": "Face Detection Using Quantized Skin Color Regions Merging and Wavelet Packet Analysis",
          "query_type": "entity",
          "length": 85,
          "word_count": 12,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "general"
        },
        "routing_decision": {
          "query_id": "ddbb6e0913ac127004be73e2d4097513a8f02d37",
          "query_text": "Face Detection Using Quantized Skin Color Regions Merging and Wavelet Packet Analysis",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.6,
            "EfficientVector": 0.4
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:56.807554"
        },
        "processing_time": 474.306583404541,
        "num_results": 10
      },
      {
        "query_id": "c81243651340f396c9100e86352cb43933307be9",
        "query_text": "Reduction of Unbalanced Axial Magnetic Force in Postfault Operation of a Novel Six-Phase Double-Stator Axial-Flux PM Machine Using Model Predictive Control",
        "query_features": {
          "query_id": "c81243651340f396c9100e86352cb43933307be9",
          "query_text": "Reduction of Unbalanced Axial Magnetic Force in Postfault Operation of a Novel Six-Phase Double-Stator Axial-Flux PM Machine Using Model Predictive Control",
          "query_type": "entity",
          "length": 155,
          "word_count": 21,
          "is_question": false,
          "has_numbers": false,
          "has_entities": true,
          "complexity_level": "complex",
          "domain_hint": "technical"
        },
        "routing_decision": {
          "query_id": "c81243651340f396c9100e86352cb43933307be9",
          "query_text": "Reduction of Unbalanced Axial Magnetic Force in Postfault Operation of a Novel Six-Phase Double-Stator Axial-Flux PM Machine Using Model Predictive Control",
          "query_type": "entity",
          "selected_retrievers": [
            "BM25",
            "EfficientVector"
          ],
          "fusion_method": "RRF",
          "fusion_weights": {
            "BM25": 0.5,
            "EfficientVector": 0.5
          },
          "confidence": 0.75,
          "reasoning": "\u5b9e\u4f53\u67e5\u8be2\u9700\u8981\u591a\u68c0\u7d22\u5668\u878d\u5408 + \u6280\u672f\u9886\u57df\u589e\u5f3a\u5411\u91cf\u68c0\u7d22 + \u590d\u6742\u67e5\u8be2\u4f7f\u7528RRF\u878d\u5408",
          "timestamp": "2025-07-19T22:12:57.281893"
        },
        "processing_time": 555.5651187896729,
        "num_results": 10
      }
    ]
  }
}